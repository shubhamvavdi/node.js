                                                        //  Node js bessice 

//                                                         1. Node.js નો પરિચય
// પ્રોગ્રામિંગ ભાષા - નહીં
// ટેકનોલોજી - નહીં
// ફ્રેમવર્ક - નહીં
// રનટાઇમ એન્બાયરનમેન્ટ - હા
// JS Backend શક્ય છે? - ના
// રાયન દાલની વાર્તા: રાયન દાલ એ Node.jsના સર્જક છે. તેણે 2009માં Node.js વિકસાવવાનું શરૂ કર્યું હતું, જેના માધ્યમથી JavaScriptને સર્વર સાઇડ પર ચલાવવાનો રસ્તો ખોલવામાં આવ્યો.


// Node.js અને npm સ્થાપિત કરવું
// Node.js કેવી રીતે સ્થાપિત કરવું?
// તમારા કમ્પ્યુટર પર Node.js સ્થાપિત કરવા માટે Node.jsની ઓફિશિયલ વેબસાઈટ પર જાઓ અને લેટેસ્ટ વર્ઝન ડાઉનલોડ કરો.
// npm પેકેજ શું છે?
// npm (Node Package Manager) એ Node.js માટે પેકેજ મૅનેજર છે, જે તમને વિવિધ લાઇબ્રેરીઝ અને પેકેજો ઇન્સ્ટોલ કરવા અને મેનેજ કરવા માટે મદદ કરે છે.
// પ્રોજેક્ટમાં Node સ્થાપિત કરવો (npm init)
// પ્રોજેક્ટના ફોલ્ડરમાં ટર્મિનલ/કમાન્ડ પ્રોમ્પટમાં npm init ટાઈપ કરો, જે તમારા પ્રોજેક્ટ માટે package.json ફાઈલ બનાવશે.

// 3. Node.js દસ્તાવેજીકરણ
// CJS (CommonJS): Node.js કોડ શેર કરવા માટેનું સામાન્ય મોડ્યુલ સિસ્ટમ છે.
// ફાઇલ સિસ્ટમ:
// કૉલબૅક, સિંક & એસીંક:
// Sync: સિંક્રોનસ ફંક્શનનો ઉપયોગ થતું હોય છે જ્યાં એક પછી બીજું એક્શન થાય છે.
// Async: એસીંક્રોનસ ફંક્શનનો ઉપયોગ થતો હોય છે જેમાં કોડ એકસાથે ચલાવવામાં આવે છે.
// ફાઇલો સાથે કામ કરવું:
// લખવું (fs.writeFileSync() / fs.writeFile()):
// ફાઇલમાં લખવું.
// ચાલવું:
// Node.js પ્રોજેક્ટ ચલાવવા માટે, node filename.js ટાઇપ કરો.
// એપેન્ડ: (fs.appendFileSync())
// મૌજુદા ફાઇલમાં ડેટા ઉમેરવું.
// રીનેમ (fs.renameSync()):
// ફાઇલનું નામ બદલવું.
// કોપી ફાઇલ (fs.copyFileSync()):
// ફાઇલ કોપી કરવી.
// અનલિંક (fs.unlinkSync()):
// ફાઇલ ડિલીટ કરવી.
// rmdir (recursive) (fs.rmdirSync()):
// ડિરેક્ટરી દૂર કરવી, જે અંદર ફાઇલો ધરાવે છે.
// ફોલ્ડર બનાવવું (fs.mkdirSync()):
// નવું ડિરેક્ટરી બનાવવું.
// ફાઈલ વાંચવી (fs.readFileSync()):
// ફાઇલમાંથી ડેટા વાંચવું.


// 4. HTTP/પ્રોટોકોલ
// પ્રોટોકોલ શું છે?: પ્રોટોકોલ એ નિયમો છે જે ડેટા ટ્રાન્સફર માટે ઉપયોગ થાય છે.
// HTTP: HTTP એ ઈન્ટરનેટ પર ડેટા મોકલવા અને મેળવવા માટેનો એજ પ્રોટોકોલ છે. HTTP વિના ઇન્ટરનેટ પર કંઈક મોકલવું અથવા મેળવવું શક્ય નથી.
// સર્વર શું છે અને સર્વર કેવી રીતે બનાવવો?
// સર્વર એ એવી મશીન છે જે ક્લાયન્ટ તરફથી આવેલી વિનંતીઓ પર પ્રોસેસ કરે છે અને જવાબ આપે છે.
// નોડ.જીએસમાં સર્વર બનાવવા માટે, તમે http મોડ્યૂલનો ઉપયોગ કરી શકો છો.
// સર્વર ચલાવવો:
// javascript
// Copy code


const http = require('http');
const server = http.createServer((req, res) => {
  res.statusCode = 200;
  res.setHeader('Content-Type', 'text/plain');
  res.end('હેલો, વર્લ્ડ!');
});

server.listen(3000, '127.0.0.1', () => {
  console.log('સર્વર 3000 પોર્ટ પર ચાલે છે');
});

// સર્વર બંધ કરવું (ctrl+c):
// કમાન્ડ લાઇનમાં ctrl+c દબાવીને સર્વર બંધ કરી શકો છો.